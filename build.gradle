buildscript {
	repositories {
		mavenCentral()
		maven {
			name = "forge"
			url = "http://files.minecraftforge.net/maven"
		}
		maven {
			name = "sonatype"
			url = "https://oss.sonatype.org/content/repositories/snapshots/"
		}
	}
	dependencies {
		classpath 'net.minecraftforge.gradle:ForgeGradle:1.2-SNAPSHOT'
	}
}

apply plugin: 'forge'

file "build.properties" withReader {
	def prop = new Properties()
	prop.load(it)
	ext.config = new ConfigSlurper().parse prop
}

version = "${config.minecraft.version}-${config.factumopus.version}"
group = "vexatos.factumopus" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "FactumOpus"

if (JavaVersion.current().isJava8Compatible()) {
	allprojects {
		tasks.withType(Javadoc) {
			options.addStringOption('Xdoclint:none', '-quiet')
		}
	}
}

repositories {
	maven {
		name "Mobius Repo"
		url "http://mobiusstrip.eu/maven"
	}
	maven {
		name 'CB Repo'
		url "http://chickenbones.net/maven/"
	}
	maven {
		name = "Forestry repo"
		url = "http://maven.ic2.player.to/"
	}
	ivy {
		name = "BuildCraft"
		artifactPattern "http://www.mod-buildcraft.com/releases/BuildCraft/[revision]/[module]-[revision]-[classifier].[ext]"
	}
	ivy {
		name = "Galacticraft"
		artifactPattern "http://ci.micdoodle8.com/job/Galacticraft3-dev/${config.gc.build}/artifact/Forge/build/libs/[module]-1.7-[revision].${config.gc.build}.[ext]"
	}
}

configurations {
	provided
	embedded
	compile.extendsFrom provided, embedded
}

dependencies {
	compile("codechicken:CodeChickenLib:${config.cclib.version}:dev") {
		transitive = false
	}
	compile("codechicken:CodeChickenCore:${config.cccore.version}:dev") {
		transitive = false
	}
	compile("codechicken:NotEnoughItems:${config.nei.version}:dev") {
		transitive = false
	}
	compile("mcp.mobius.waila:Waila:${config.waila.version}:dev") {
		transitive = false
	}
	compile("net.sengir.forestry:forestry_1.7.10:${config.forestry.version}:dev") {
		exclude module: "buildcraft"
		exclude module: "industrialcraft-2"
	}
	compile name: "buildcraft", version: "${config.buildcraft.version}", classifier: "dev"

	compile name: 'MicdoodleCore-Dev', version: config.gc.version, ext: 'jar'
	compile name: 'GalacticraftCore-Dev', version: config.gc.version, ext: 'jar'
	compile name: 'Galacticraft-Planets-Dev', version: config.gc.version, ext: 'jar'
}

minecraft {
	version = "${config.minecraft.version}-${config.forge.version}"
	runDir = "eclipse"

	replaceIn "vexatos/factumopus/FactumOpus.java"
	replace "@VERSION@", "${config.factumopus.version}"
}

sourceSets {
	main {
		output.resourcesDir = 'build/classes/main'
	}
}

jar {
	exclude 'cofh/**'
}

apply plugin: 'idea'
idea {
	module {
		scopes.PROVIDED.plus += [configurations.provided]
		outputDir = file('build/classes/main')
	}
}

processResources
	{
		// replace stuff in mcmod.info, nothing else
		from(sourceSets.main.resources.srcDirs) {
			include 'mcmod.info'

			// replace version and mcversion
			expand 'version': project.version, 'mcversion': project.minecraft.version
		}

		// copy everything else, thats not the mcmod.info
		from(sourceSets.main.resources.srcDirs) {
			exclude 'mcmod.info'
		}
	}

//For Building

def libDir = './build/libs'

task deobfJar(type: Jar) {
	description = 'Creates a jar file containing the non-obfuscated class files'
	classifier = 'deobf'
	destinationDir = file(libDir)
	from sourceSets.main.output.classesDir
}

task apiZip(type: Zip) {
	description = 'Creates a zip file containing the API source files only'
	classifier = 'api'
	destinationDir = file(libDir)
	from sourceSets.main.allSource
	include 'vexatos/factumopus/api/**'
}

task makeJars << {
	description = 'Creates the mod files'
}

makeJars.dependsOn clean, build, deobfJar, apiZip
build.shouldRunAfter clean
deobfJar.shouldRunAfter build
apiZip.shouldRunAfter deobfJar
